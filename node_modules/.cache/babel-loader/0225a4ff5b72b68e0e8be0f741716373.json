{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Name\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"invalid-feedback\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary mt-3\"\n}, \"Update\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, \"Edit \" + _toDisplayString($data.task.name), 1\n  /* TEXT */\n  ), _createElementVNode(\"form\", {\n    class: \"w-25 m-auto\",\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.update && $options.update(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: _normalizeClass([\"form-control\", {\n      'is-invalid': $data.errors.name\n    }]),\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.task.name = $event),\n    placeholder: \"Enter name\"\n  }, null, 2\n  /* CLASS */\n  ), [[_vModelText, $data.task.name]]), _createElementVNode(\"span\", _hoisted_3, _toDisplayString($data.errors.name), 1\n  /* TEXT */\n  )]), _hoisted_4], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$router.back()),\n    class: \"btn btn-secondary mt-3\"\n  }, \"Cancel\")]);\n}","map":{"version":3,"mappings":";;EAIaA,KAAK,EAAC;;;gCACPC,oBAA8B,OAA9B,EAA8B;EAAvBC,GAAG,EAAC;AAAmB,CAA9B,EAAkB,MAAlB,EAAsB;AAAA;AAAtB;;;EAEMF,KAAK,EAAC;;;gCAEhBC,oBAAkE,QAAlE,EAAkE;EAA1DE,IAAI,EAAC,QAAqD;EAA5CH,KAAK,EAAC;AAAsC,CAAlE,EAAmD,QAAnD,EAAyD;AAAA;AAAzD;;;uBARNI,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVJH,oBAA2B,IAA3B,EAA2B,IAA3B,EAAI,UAAKI,iBAAEC,WAAKC,IAAP,CAAT,EAAoB;EAAA;EAApB,CAUI,EATJN,oBAOO,MAPP,EAOO;IAPDD,KAAK,EAAC,aAOL;IAPoBQ,QAAM,wDAAUC,2CAAV,EAAgB,WAAhB;EAO1B,CAPP,GACIR,oBAIM,KAJN,cAIM,CAHFS,UAGE,kBAFFT,oBAAqI,OAArI,EAAqI;IAA9HE,IAAI,EAAC,MAAyH;IAAlHH,KAAK,mBAAC,cAAD,EAAe;MAAA,cAAgFM,aAAOC;IAAvF,CAAf,EAA6G;IAA7FI,EAAE,EAAC,MAA0F;+DAA1EL,WAAKC,OAAIK,OAAiE;IAA/DC,WAAW,EAAC;EAAmD,CAArI;;EAAA,kBAA2DP,WAAKC,OAE9D,EADFN,oBAAuD,MAAvD,cAAuDI,iBAArBC,aAAOC,IAAc,CAAvD,EAA6C;EAAA;EAA7C,CACE,CAJN,GAKAO,WANJ;;EAAA,CASI,EADJb,oBAA8E,QAA9E,EAA8E;IAArEc,OAAK,sCAAEC,aAAQC,IAAR,EAAF,CAAgE;IAA9CjB,KAAK,EAAC;EAAwC,CAA9E,EAA+D,QAA/D,CACI,CAXN","names":["class","_createElementVNode","for","type","_createElementBlock","_toDisplayString","$data","name","onSubmit","$options","_hoisted_2","id","$event","placeholder","_hoisted_4","onClick","_ctx","back"],"sourceRoot":"","sources":["/Users/sairamvaddireddy/Documents/Sites/vue-todo/src/views/Tasks/todo-edit.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Edit {{task.name}}</h1>\n    <form class=\"w-25 m-auto\" @submit.prevent=\"update\">\n        <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" v-model=\"task.name\" placeholder=\"Enter name\" :class=\"{'is-invalid' : errors.name}\">\n            <span class=\"invalid-feedback\">{{ errors.name }}</span>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary mt-3\">Update</button>\n    </form>\n    <button @click=\"$router.back()\" class=\"btn btn-secondary mt-3\">Cancel</button>\n  </div>\n</template>\n<script>\nimport axios from 'axios';\nexport default {\n  created() {\n    if (!localStorage.getItem('token')) {\n      this.$router.push('/');\n    }\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const {data} = await axios.get(`${process.env.VUE_APP_BASE_API}/tasks/`+ this.$route.params.id, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('token')}`} });\n        this.task = data.task;\n      } catch(e) {\n        if (e.response.status == 401) {\n          localStorage.removeItem('token');\n          this.$router.push('/');\n        }\n      }\n    },\n    async update() {\n        let headers = {\"Authorization\" : `Bearer ${localStorage.getItem('token')}`};\n      try {\n        const {data} = await axios.put(`${process.env.VUE_APP_BASE_API}/tasks/` + this.$route.params.id, this.task, {headers: headers});\n        if (data.status) {\n          this.$swal('success', data.message, 'success');\n          this.$router.push('/tasks');\n        } else {\n          this.$swal('oops!', 'something went wrong! try again!!', 'error');\n        }\n      } catch(e) {\n        if (e.response.status == 401) {\n          localStorage.removeItem('token');\n          this.$router.push('/');\n        } else if(e.response.status == 422) {\n          let data = e.response.data;\n          if (data.errors?.name || false) {\n              this.errors.name = data.errors.name[0];\n          } else {\n              this.errors.name = '';\n          }\n        }\n      }\n    },\n  },\n  data() {\n    return {\n      task: {},\n      errors: {\n          name: '',\n          quantity: '',\n          price: ''\n      }\n    }\n  },\n\n\n}\n</script>"]},"metadata":{},"sourceType":"module"}