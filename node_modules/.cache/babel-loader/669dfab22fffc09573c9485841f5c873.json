{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TodoRegister',\n\n  created() {\n    if (localStorage.getItem('token')) {\n      this.$router.push('/tasks');\n    }\n  },\n\n  data() {\n    return {\n      'name': '',\n      'email': '',\n      'password': '',\n      'c_password': '',\n      'errors': {\n        'name': '',\n        'email': '',\n        'password': '',\n        'c_password': ''\n      }\n    };\n  },\n\n  methods: {\n    async register() {\n      this.validate();\n\n      try {\n        const {\n          data\n        } = await axios.post(`${process.env.VUE_APP_BASE_API}/register`, {\n          'name': this.name,\n          'email': this.email,\n          'password': this.password,\n          'c_password': this.c_password\n        });\n        console.log(data);\n\n        if (data.status) {\n          localStorage.setItem('token', data.token);\n          this.$router.push('/tasks');\n        }\n\n        if (data.errors?.name || false) {\n          this.errors.name = data.errors.name[0];\n        }\n\n        if (data.errors?.email || false) {\n          this.errors.email = data.errors.email[0];\n        }\n\n        if (data.errors?.password || false) {\n          this.errors.password = data.errors.password[0];\n        }\n\n        if (data.errors?.c_password || false) {\n          this.errors.c_password = data.errors.c_password[0];\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    validate() {\n      if (!this.name) {\n        this.errors.name = 'Name is required';\n      } else {\n        this.errors.name = '';\n      }\n\n      if (!this.email) {\n        this.errors.email = 'Email is required';\n      } else {\n        this.errors.email = '';\n      }\n\n      if (!this.password) {\n        this.errors.password = 'Password is required';\n      } else {\n        this.errors.password = '';\n      }\n\n      if (!this.c_password) {\n        this.errors.c_password = 'Confirm Password is required';\n      } else if (this.password != this.c_password) {\n        this.errors.c_password = 'Password and ConfirmPassword Does not match';\n      } else {\n        this.errors.c_password = '';\n      }\n\n      return;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","created","localStorage","getItem","$router","push","data","methods","register","validate","post","process","env","VUE_APP_BASE_API","email","password","c_password","console","log","status","setItem","token","errors","e"],"sourceRoot":"","sources":["/Users/sairamvaddireddy/Documents/Sites/vue-todo/src/views/todo-register.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>Register</h1>\n      <form class=\"w-25 m-auto\" @submit.prevent=\"register\">\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"name\" class=\"form-control\" id=\"name\" v-model=\"name\" placeholder=\"Enter name\" :class=\"{'is-invalid' : errors.name}\">\n          <span class=\"invalid-feedback\">{{ errors.name }}</span>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">Email address</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"email\" placeholder=\"Enter email\" :class=\"{'is-invalid' : errors.email}\">\n          <span class=\"invalid-feedback\">{{ errors.email }}</span>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\" placeholder=\"Password\" :class=\"{'is-invalid' : errors.password}\">\n          <span class=\"invalid-feedback\">{{ errors.password }}</span>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"c_password\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"c_password\" v-model=\"c_password\" placeholder=\"Confirm Password\" :class=\"{'is-invalid' : errors.c_password}\">\n          <span class=\"invalid-feedback\">{{ errors.c_password }}</span>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary mt-3\">Submit</button>\n      </form>\n      <router-link :to=\"{ name: 'Home' }\" class=\"mt-6\">Already Registered? Login Here</router-link>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TodoRegister',\n  created() {\n    if (localStorage.getItem('token')) {\n      this.$router.push('/tasks');\n    }\n  },\n  data() {\n    return {\n      'name': '',\n      'email': '',\n      'password': '',\n      'c_password': '',\n      'errors': {\n        'name': '',\n        'email': '',\n        'password': '',\n        'c_password': '',\n      }\n    }\n  },\n  methods: {\n    async register() {\n      this.validate();\n      try {\n        const {data} = await axios.post(`${process.env.VUE_APP_BASE_API}/register`, {'name': this.name,'email': this.email, 'password': this.password, 'c_password': this.c_password});\n        console.log(data);\n        if (data.status) {\n          localStorage.setItem('token', data.token);\n          this.$router.push('/tasks');\n        }\n        if (data.errors?.name || false) {\n          this.errors.name = data.errors.name[0];\n        }\n        if (data.errors?.email || false) {\n          this.errors.email = data.errors.email[0];\n        }\n        if (data.errors?.password || false) {\n          this.errors.password = data.errors.password[0];\n        }\n        if (data.errors?.c_password || false) {\n          this.errors.c_password = data.errors.c_password[0];\n        }\n      } catch(e) {\n        console.log(e);\n      }\n    },\n    validate() {\n      if (!this.name) {\n        this.errors.name = 'Name is required';\n      } else {\n        this.errors.name = '';\n      }\n      if (!this.email) {\n        this.errors.email = 'Email is required';\n      } else {\n        this.errors.email = '';\n      }\n      if (!this.password) {\n        this.errors.password = 'Password is required';\n      } else {\n        this.errors.password = '';\n      }\n      if (!this.c_password) {\n        this.errors.c_password = 'Confirm Password is required';\n      } else if(this.password != this.c_password){\n        this.errors.c_password = 'Password and ConfirmPassword Does not match';\n      }else{\n          this.errors.c_password = '';\n      }\n      return;\n    }\n  }\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module"}