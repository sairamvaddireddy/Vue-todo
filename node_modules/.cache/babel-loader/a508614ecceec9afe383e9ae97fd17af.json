{"ast":null,"code":"import axios from 'axios';\nexport default {\n  created() {\n    if (!localStorage.getItem('token')) {\n      this.$router.push('/');\n    }\n  },\n\n  mounted() {\n    this.fetchData();\n  },\n\n  methods: {\n    async fetchData() {\n      try {\n        const {\n          data\n        } = await axios.get(`${process.env.VUE_APP_BASE_API}/tasks/` + this.$route.params.id, {\n          headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.task = data.task;\n      } catch (e) {\n        if (e.response.status == 401) {\n          localStorage.removeItem('token');\n          this.$router.push('/');\n        }\n      }\n    },\n\n    async update() {\n      let headers = {\n        \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n      };\n\n      try {\n        const {\n          data\n        } = await axios.put(`${process.env.VUE_APP_BASE_API}/tasks/` + this.$route.params.id, this.task, {\n          headers: headers\n        });\n\n        if (data.status) {\n          this.$swal('success', data.message, 'success');\n          this.$router.push('/tasks');\n        } else {\n          this.$swal('oops!', 'something went wrong! try again!!', 'error');\n        }\n      } catch (e) {\n        if (e.response.status == 401) {\n          localStorage.removeItem('token');\n          this.$router.push('/');\n        } else if (e.response.status == 422) {\n          let data = e.response.data;\n\n          if (data.errors?.name || false) {\n            this.errors.name = data.errors.name[0];\n          } else {\n            this.errors.name = '';\n          }\n        }\n      }\n    }\n\n  },\n\n  data() {\n    return {\n      task: {},\n      errors: {\n        name: '',\n        quantity: '',\n        price: ''\n      }\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAeA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,OAAO,GAAG;IACR,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;MAClC,KAAKC,OAAL,CAAaC,IAAb,CAAkB,GAAlB;IACF;EACD,CALY;;EAMbC,OAAO,GAAG;IACR,KAAKC,SAAL;EACD,CARY;;EASbC,OAAO,EAAE;IACP,MAAMD,SAAN,GAAkB;MAChB,IAAI;QACF,MAAM;UAACE;QAAD,IAAS,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,gBAAiB,SAAhC,GAA0C,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAAvE,EAA2E;UAAEC,OAAO,EAAE;YAAC,iBAAmB,UAASf,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;UAA3D;QAAX,CAA3E,CAArB;QACA,KAAKe,IAAL,GAAYT,IAAI,CAACS,IAAjB;MACF,CAHA,CAGE,OAAMC,CAAN,EAAS;QACT,IAAIA,CAAC,CAACC,QAAF,CAAWC,MAAX,IAAqB,GAAzB,EAA8B;UAC5BnB,YAAY,CAACoB,UAAb,CAAwB,OAAxB;UACA,KAAKlB,OAAL,CAAaC,IAAb,CAAkB,GAAlB;QACF;MACF;IACD,CAXM;;IAYP,MAAMkB,MAAN,GAAe;MACX,IAAIN,OAAM,GAAI;QAAC,iBAAmB,UAASf,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;MAA3D,CAAd;;MACF,IAAI;QACF,MAAM;UAACM;QAAD,IAAS,MAAMT,KAAK,CAACwB,GAAN,CAAW,GAAEb,OAAO,CAACC,GAAR,CAAYC,gBAAiB,SAAhC,GAA2C,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAAxE,EAA4E,KAAKE,IAAjF,EAAuF;UAACD,OAAO,EAAEA;QAAV,CAAvF,CAArB;;QACA,IAAIR,IAAI,CAACY,MAAT,EAAiB;UACf,KAAKI,KAAL,CAAW,SAAX,EAAsBhB,IAAI,CAACiB,OAA3B,EAAoC,SAApC;UACA,KAAKtB,OAAL,CAAaC,IAAb,CAAkB,QAAlB;QACF,CAHA,MAGO;UACL,KAAKoB,KAAL,CAAW,OAAX,EAAoB,mCAApB,EAAyD,OAAzD;QACF;MACF,CARA,CAQE,OAAMN,CAAN,EAAS;QACT,IAAIA,CAAC,CAACC,QAAF,CAAWC,MAAX,IAAqB,GAAzB,EAA8B;UAC5BnB,YAAY,CAACoB,UAAb,CAAwB,OAAxB;UACA,KAAKlB,OAAL,CAAaC,IAAb,CAAkB,GAAlB;QACF,CAHA,MAGO,IAAGc,CAAC,CAACC,QAAF,CAAWC,MAAX,IAAqB,GAAxB,EAA6B;UAClC,IAAIZ,IAAG,GAAIU,CAAC,CAACC,QAAF,CAAWX,IAAtB;;UACA,IAAIA,IAAI,CAACkB,MAAL,EAAaC,IAAb,IAAqB,KAAzB,EAAgC;YAC5B,KAAKD,MAAL,CAAYC,IAAZ,GAAmBnB,IAAI,CAACkB,MAAL,CAAYC,IAAZ,CAAiB,CAAjB,CAAnB;UACJ,CAFA,MAEO;YACH,KAAKD,MAAL,CAAYC,IAAZ,GAAmB,EAAnB;UACJ;QACF;MACF;IACD;;EAnCM,CATI;;EA8CbnB,IAAI,GAAG;IACL,OAAO;MACLS,IAAI,EAAE,EADD;MAELS,MAAM,EAAE;QACJC,IAAI,EAAE,EADF;QAEJC,QAAQ,EAAE,EAFN;QAGJC,KAAK,EAAE;MAHH;IAFH,CAAP;EAQD;;AAvDY,CAAf","names":["axios","created","localStorage","getItem","$router","push","mounted","fetchData","methods","data","get","process","env","VUE_APP_BASE_API","$route","params","id","headers","task","e","response","status","removeItem","update","put","$swal","message","errors","name","quantity","price"],"sourceRoot":"","sources":["/Users/sairamvaddireddy/Documents/Sites/vue-todo/src/views/Tasks/todo-edit.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Edit {{task.name}}</h1>\n    <form class=\"w-25 m-auto\" @submit.prevent=\"update\">\n        <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" v-model=\"task.name\" placeholder=\"Enter name\" :class=\"{'is-invalid' : errors.name}\">\n            <span class=\"invalid-feedback\">{{ errors.name }}</span>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary mt-3\">Update</button>\n    </form>\n    <button @click=\"$router.back()\" class=\"btn btn-secondary mt-3\">Cancel</button>\n  </div>\n</template>\n<script>\nimport axios from 'axios';\nexport default {\n  created() {\n    if (!localStorage.getItem('token')) {\n      this.$router.push('/');\n    }\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const {data} = await axios.get(`${process.env.VUE_APP_BASE_API}/tasks/`+ this.$route.params.id, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('token')}`} });\n        this.task = data.task;\n      } catch(e) {\n        if (e.response.status == 401) {\n          localStorage.removeItem('token');\n          this.$router.push('/');\n        }\n      }\n    },\n    async update() {\n        let headers = {\"Authorization\" : `Bearer ${localStorage.getItem('token')}`};\n      try {\n        const {data} = await axios.put(`${process.env.VUE_APP_BASE_API}/tasks/` + this.$route.params.id, this.task, {headers: headers});\n        if (data.status) {\n          this.$swal('success', data.message, 'success');\n          this.$router.push('/tasks');\n        } else {\n          this.$swal('oops!', 'something went wrong! try again!!', 'error');\n        }\n      } catch(e) {\n        if (e.response.status == 401) {\n          localStorage.removeItem('token');\n          this.$router.push('/');\n        } else if(e.response.status == 422) {\n          let data = e.response.data;\n          if (data.errors?.name || false) {\n              this.errors.name = data.errors.name[0];\n          } else {\n              this.errors.name = '';\n          }\n        }\n      }\n    },\n  },\n  data() {\n    return {\n      task: {},\n      errors: {\n          name: '',\n          quantity: '',\n          price: ''\n      }\n    }\n  },\n\n\n}\n</script>"]},"metadata":{},"sourceType":"module"}